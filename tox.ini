[tox]
description = list of environments againts tox runs the tests
envlist =
    clean
    check
    docs
    py35
    py36
    py37
    py38{,-online}
    pypy
    pypy3
    coverage
    py38_slow
    py38_images
skipsdist = True

[testenv]
whitelist_externals=
    /bin/bash
    /usr/bin/bash
basepython =
    pypy: pypy
    pypy3: pypy3
    py35: python3.5
    {py36,docs}: python3.6
    py37: python3.7
    py38: python3.8
    {py38_images,py38_slow}: python3.8
    {clean,check,reformat,coverage}: python3
setenv =
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    flit >=2,<3
    pygments
commands =
    # TODO: Warning because poliastro does not have test and doc extras
    flit install --deps develop --extras=dev,cesium
    !online: pytest -vv -m "not slow and not mpl_image_compare" {posargs:--mypy -vv}
    online: pytest -vv -m "not slow and not mpl_image_compare" --remote-data=any {posargs:--mypy -vv}


[testenv:coverage]
description = measures code coverage
commands =
    flit install --symlink --deps develop --extras=dev,cesium
    pytest --cov {posargs:--cov-report=term-missing}

[testenv:py38_images]
commands =
    flit install
    pytest -m "mpl_image_compare" --mpl {posargs:-vv}

[testenv:py38_slow]
commands =
    flit install --deps develop --extras=dev,cesium
    pytest -m "slow" -vv {posargs:-vv}


[testenv:check]
description = this environments checks for flake8, black, isort and poliastro code style
deps =
	black
	docutils
	isort
	flake8
	mypy
	pygments
skip_install = true
commands =
    flake8 src
    isort --check-only --diff --recursive --project poliastro --section-default THIRDPARTY src tests
    black --check src tests
    mypy --ignore-missing-imports --check-untyped-defs --no-strict-optional src


[testenv:reformat]
description = reformats the code using black and isort
deps =
	black
	isort
skip_install = true
commands =
    isort --recursive --project poliastro --section-default THIRDPARTY src tests
    black src tests


[testenv:docs]
description = invoke sphinx-build to build the HTML docs
extras =  docs
whitelist_externals = sphinx-build
commands = 
    bash -ec "sudo apt install pandoc texlive texlive-latex-extra texlive-fonts-recommended dvipng graphviz cm-super-minimal"
    pip install .[dev,cesium]
    pip install https://github.com/Juanlu001/sphinx_rtd_theme/archive/avoid-require-redefinition.zip
    sphinx-build -d "{toxworkdir}/docs_doctree" docs/source "{toxworkdir}/docs_out" --color -vW -bhtml

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

